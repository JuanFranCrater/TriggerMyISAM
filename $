drop table if exists A;
create table A (ca int not null, da int null) engine=myISAM;

drop table if exists B;
create table B (ca int not null, db int not null) engine=myISAM;

drop table if exists C;
create table C (ca int not null, dc int not null) engine=myISAM;

delimiter //

drop trigger if exists bi_a//
create trigger bi_a BEFORE INSERT on A
for each row
begin
	declare violacion_jeraquia_total condition for SQLSTATE '77777';
	declare error_clave_primaria condition for SQLSTATE '77779';

	if not exists(select * from B where ca = new.ca) and not exists (select * from C where ca = new.ca) then
		signal violacion_jeraquia_total set message_text = 'Operacion no permitida en tabla A';
	end if;
if exists(select * from A where ca = new.ca) then
		signal error_clave_primaria set message_text = 'Error clave primaria';
	end if;

end//

drop trigger if exists bi_b //
create trigger bi_b BEFORE INSERT on B
for each row
begin
	declare violacion_jeraquia_exclusiva condition for SQLSTATE '77778';

	if  exists(select * from A where ca = new.ca) then
		signal violacion_jeraquia_exclusiva set message_text = 'Registro duplicado';
	end if;

end//

drop trigger if exists bi_c//
create trigger bi_c BEFORE INSERT on C
for each row
begin
	declare violacion_jeraquia_exclusiva condition for SQLSTATE '77778';

	if  exists(select * from A where ca = new.ca) then
		signal violacion_jeraquia_exclusiva set message_text = 'Registro duplicado';
	end if;

end//

drop trigger if exists ai_b//
create trigger ai_b AFTER INSERT on B
for each row
begin
	insert into A values (new.ca,NULL);
end//

drop trigger if exists ai_c//
create trigger ai_c AFTER INSERT on C
for each row
begin
	insert into A values (new.ca,NULL);
end//


drop trigger if exists bu_B//
create trigger bu_B before update on B
	for each row

	begin
		declare clavePrimariaNoModificable condition for SQLSTATE '77780';

		if not exists (select * from A where ca=new.ca) then
			signal clavePrimariaNoModificable set message_text = 'No está permitido cambiar la clave primaria en esta entidad';
		end if;
	end//

drop trigger if exists bu_C//
create trigger bu_C before update on C
	for each row

	begin
		declare clavePrimariaNoModificable condition for SQLSTATE '77780';
		
		if not exists (select * from A where ca=new.ca) then
			signal clavePrimariaNoModificable set message_text = 'No está permitido cambiar la clave primaria en esta entidad';
		end if;
	end//


drop trigger if exists bu_A//
create trigger bu_A before update on A
	for each row

	begin
	declare error_clave_primaria condition for SQLSTATE '77779';
		if exists (select * from B where new.ca = ca) or exists (select * from C where new.ca = ca) then
			signal error_clave_primaria set message_text = 'Clave primaria ya existente';
		end if;	

	end//

drop trigger if exists au_A//
create trigger au_A after update on A
	for each row

	begin
		if old.ca <> new.ca then
			update B set ca = new.ca where ca = old.ca;
			update C set ca = new.ca where ca = old.ca;
		end if;
	end//

drop trigger if exists bd_B//
create trigger bd_B after update on B
	for each row
begin
	declare prohibido_borrado condition for SQLSTATE '77782';
	if exists (select * from A where ca = old.ca) then
		signal prohibido_borrado set message_text = 'No esta permitido borrar en esta table';
	end if;
end//

drop trigger if exists bd_C//
create trigger bd_C after update on C
	for each row
begin
	declare prohibido_borrado condition for SQLSTATE '77782';
	if exists (select * from A where ca = old.ca) then
		signal prohibido_borrado set message_text = 'No esta permitido borrar en esta table';
	end if;
end//
delimiter ;
